(format-only true)

(def-predicate (a-continuous-function-from-onto f x y)
  ()
  (format "~a is a continuous function from ~a to ~a")
  (name "the definition of a continuous function")
  )

(def-term (the-projection-function a x b)
  ()
  (format "the ~ath projection function from the product of ~a over ~a")
  (name "the definition of the projection function")
  )

(def-term (the-product-top-space-over x a)
  ()
  (format "the product topological space of ~a over the index set ~a")
  (name "the definition of the product space")
  )

(def-term (apply f x)
  ()
  (format "{~a}(~a)")
  (name "the definition of function application")
  )

(def-predicate (an-open-function-from-onto f a b)
  ()
  (format "~a is an open function from ~a onto ~a")
  (name "the definition of an open function")
  )

(def-predicate (a-locally-compact-top-space a)
  ()
  (format "~a is a locally compact topological space")
  (name "the definition of a locally compact space")
  )

(format-only false)

(def-knowledge kelley-p90a
  (a-continuous-function-from-onto
   (the-projection-function a x_ a_)
   (the-product-top-space-over x_ a_)
   (apply x_ a))
  (name "the statement on the top of page 90 of Kelley"))

(def-knowledge kelley-3-2
  (an-open-function-from-onto 
   (the-projection-function a x_ a_)
   (the-product-top-space-over x_ a_)
   (apply x_ a))
  (name "Theorem 2 in chapter 3 of Kelley"))

(def-knowledge kelley-p-147e
  (implies (and (an-open-function-from-onto f a b)
		(a-continuous-function-from-onto f a b)
		(a-locally-compact-top-space a))
    (a-locally-compact-top-space b))
  (name "a statement near the bottom of page 147 of Kelley"))

;;(def-knowledge kelley-5-19b
;;  (implies (a-locally-compact-top-space
;;	    (the-product-top-space-over X_ A_))
;;    (a-finite-set (the-class-of-all (p)
;;		    (and (for-some ((a))
;;			   (and (a-member-of a A_)
;;				(= p (apply X_ a))))
;;			 (not (a-compact-top-space p))))))
;;  (name "the second half of theorem 5.19 of Kelley")
;;  )

(def-conjecture kelley-5-19a
  (implies (a-locally-compact-top-space
	    (the-product-top-space-over X_ A_))
    (forall ((a))
      (a-locally-compact-top-space (apply X_ a)))))

