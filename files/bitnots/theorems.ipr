(def-conjecture a
  (forall ((a))
    (for-some ((x) (x2) (x3) (x4) (y))
      (implies (and (p a) (e a)
                    (implies (e x)
                      (or (g x) (s x (f x))))
                    (implies (e x2)
                      (or (g x2) (c (f x2)))) 
                    (implies (s a y) (p y))) 
        (or (and (p x3) (g x3)) 
            (and (p x4) (c x4)))))))

(def-conjecture test-mbc1
  (implies (and (forall ((x)) (implies (p x) (q x)))
                (for-some ((y)) (implies (q y) (r y))))
    (for-some ((z)) (implies (p z) (r z)))))

(def-conjecture test-mbc2
  (implies (and (for-some ((y)) (implies (q y) (r y)))
                (forall ((x)) (implies (p x) (q x))))
    (for-some ((z)) (implies (p z) (r z)))))

(def-conjecture a
  (implies (p z) (p z)))

(def-conjecture a
  (forall ((y)) (implies (forall ((x)) (p x)) (p y))))

(def-conjecture a
  (implies (forall ((x)) (p x)) (for-some ((x)) (p x))))

(def-conjecture a
  (implies (not (for-some ((y)) (p y)))
    (forall ((y)) (implies (for-some ((x)) (p x))
                    (p y)))))

(def-conjecture a
  (implies (for-some ((x)) (p x)) (for-some ((y)) (p y))))

(def-conjecture a
  (implies (or (forall ((x)) (p x)) (forall ((x)) (q x)))
    (forall ((x)) (or (p x) (q x)))))

(def-conjecture a
  (implies (for-some ((x)) (and (p x) (q x)))
    (and (for-some ((x)) (p x)) (for-some ((x)) (q x)))))

(def-conjecture a
  (iff (forall ((x)) (or (p x) (c)))
       (or (forall ((x)) (p x)) (c))))

(def-conjecture a
  (iff (for-some ((x)) (and (p x) (c)))
       (and (for-some ((x)) (p x))
            (c))))

(def-conjecture a
  (iff (for-some ((x)) (c)) (c)))

(def-conjecture a
  (iff (forall ((x)) (c)) (c)))

(def-conjecture a
  (iff (for-some ((x)) (implies (c) (p x)))
       (implies (c) (for-some ((x)) (p x)))))

(def-conjecture a
  (iff (for-some ((x)) (implies (p x) (c)))
       (implies (forall ((x)) (p x)) (c))))

(def-conjecture a
  (iff (forall ((x)) (implies (c) (p x)))
       (implies (c) (forall ((x)) (p x)))))

(def-conjecture a
  (iff (forall ((x)) (implies (p x) (c)))
       (implies (for-some ((x)) (p x)) (c))))

(def-conjecture a
  (implies (for-some ((x)) (forall ((y)) (p x y)))
    (forall ((y)) (for-some ((x)) (p x y)))))

(def-conjecture a
  (implies (forall ((x) (y)) (p x y))
    (forall ((x)) (p x x))))

(def-conjecture a
  (iff (for-some ((x)) (p x)) (for-some ((y)) (p y))))

(def-conjecture a
  (implies (for-some ((x)) (p x)) (for-some ((z)) (p z))))

(def-conjecture a
  (forall ((a))
    (implies (and (or (f) (g)) (forall ((x)) (and (p x) (q x))))
      (q a))))

(def-conjecture a
  (or (iff (a) (b)) (a) (b)))

(def-conjecture a
  (implies (and (a) (b)) (iff (a) (b))))

(def-conjecture a
  (forall ((a) (b))                     ; thm2
    (for-some ((x) (y))
      (implies
          (and (implies (q x) (p x a))
               (q a)
               (q b)
               (implies (r y) (p b y))
               (r a)
               (r b)
               (implies (s a) (p x y))
               (s a))
        (p a b)))))

(def-conjecture a
  (forall ((b))
    (implies
        (forall ((y)) (implies (implies (r b) (r y)) (p (f y) y)))
      (for-some ((x)) (for-some ((y))
                        (and (p x y) (implies (q (f b) b)
                                       (q x y))))))))

(def-conjecture a
  (forall ((b))
    (implies (and (forall ((x)) (implies (p x) (q x))) (r b)) 
      (implies (forall ((y)) (implies (r y) (p y))) (q b)))))

(def-conjecture a
  (for-some ((y)) (implies (p y) (forall ((x)) (p x)))))

(def-conjecture a
  (forall ((a) (b))
    (for-some ((x) (y))
      (implies (implies (p x)
                 (r y))
        (implies (p a) (r b))))))

(def-conjecture a
  (for-some ((y)) (implies (for-some ((x)) (p x))
                    (p y))))

(def-conjecture a
  (implies (for-some ((x)) (p x))
    (and (for-some ((x)) (p x))
         (implies (a) (and (or (b) (not (b))) (implies (q) (q)))))))

(def-conjecture a
  (implies (forall ((x)) (p x)) (for-some ((y)) (p y))))

(def-conjecture a
  (implies (forall ((x)) (implies (p x) (q x)))
    (implies (forall ((x)) (p x))
      (forall ((x)) (q x)))))

(def-conjecture a
  (implies (forall ((x)) (implies (a x) (b x)))
    (implies (for-some ((x)) (a x)) (for-some ((x)) (b x)))))

(def-conjecture a
  (implies (for-some ((x)) (implies (a x) (b x)))
    (implies (forall ((x)) (a x)) (for-some ((x)) (b x)))))

(def-conjecture a
  (not (for-some ((y)) (forall ((x)) (iff (a x y) (not (a x x)))))))

(def-conjecture a
  (implies (and (for-some ((x)) (a x)) (forall ((x)) (b x)))
    (for-some ((x)) (and (a x) (b x)))))

(def-conjecture a
  (implies (for-some ((x)) (b x))
    (for-some ((x)) (or (a x) (b x)))))

(def-conjecture a
  (iff (for-some ((x) (y)) (a x y)) (for-some ((y) (x)) (a x y))))

(def-conjecture a
  (implies (and (forall ((x)) (p x)) (for-some ((y)) (q y)))
    (for-some ((z)) (forall ((y)) (or (p y) (r z))))))

(def-conjecture a
  (implies (forall ((x)) (for-some ((y)) (and (p x) (q y))))
    (for-some ((z)) (forall ((y)) (or (p y) (r z))))))

(def-conjecture a
  (implies
      (forall ((x)) (for-some ((y)) (and (a x y) (a y y))))
    (for-some ((z)) (a z z))))

(def-conjecture a
  (forall ((a) (b) (c))
    (implies (and (s a) (s b) (r b c)
                  (forall ((x)) (implies (s x) (p x)))
                  (forall ((x)) (forall ((y)) (implies (r x y)
                                                (q x y)))))
      (for-some ((x)) (for-some ((y)) (and (p x) (q x y)))))))

(def-conjecture a
  (implies (and (forall ((x)) (implies (a x) (or (b x) (c x))))
                (not (forall ((x)) (implies (a x) (b x)))))
    (for-some ((x)) (and (a x) (c x)))))

(def-conjecture a
  (implies (and (forall ((x) (y)) (implies (r x y) (r y x)))
                (forall ((x) (y) (z))
                  (implies (and (r x y) (r y z)) (r x z))))
    (forall ((x) (y)) (implies (r x y) (r x x)))))

(def-conjecture a
  (forall ((a) (b) (c))
    (implies (and (s a) (s b) (r b c)
                  (forall ((x)) (implies (s x) (p x)))
                  (forall ((x)) (forall ((y))
                                  (implies (r x y) (q x y)))))
      (for-some ((x)) (for-some ((y)) (and (p x) (q x y)))))))

(def-conjecture a
  (forall ((peanuts) (john) (bill) (sue) (apples) (chicken))
    (implies 
        (and (forall ((x)) (implies (food x) (likes john x))) 
             (food apples) 
             (food chicken) 
             (forall ((x))
               (implies
                   (for-some ((y)) (and (eats y x)
                                        (not-killed-by y x) ))
                 (food x))) 
             (eats bill peanuts) 
             (alive bill) 
             (forall ((x)) (implies (eats bill x) (eats sue x))) 
             (forall ((y)) (implies (alive y)
                             (forall ((x)) (not-killed-by y x)))))
      (likes john peanuts))))

(def-conjecture a
  (implies (and (implies (forall ((x)) (implies (and (F x) (G x))
                                         (H x)))
                  (for-some ((x)) (and (F x) (not (G x)))))
                (or (forall ((w)) (implies (F w) (G w)))
                    (forall ((z)) (implies (F z) (H z)))))
    (implies (forall ((r)) (implies (and (F r) (H r))
                             (G r)))
      (for-some ((v)) (and (F v) (G v) (not (H v)))))))

(def-conjecture a
  (forall ((peanuts) (john) (bill) (sue) (apples) (chicken))
    (implies                            ;for checking out detail
        (and 
         (forall ((x)) (forall ((y)) (implies (and (alive y)
                                                   (eats y chicken)) 
                                       (likes y x))))
         (forall ((x)) (implies (food x) (likes john x))) 
         (food apples) 
         (food chicken) 
         (forall ((x)) (implies (for-some ((y)) (and (eats y x)
                                                     (not-killed-by y x)))
                         (food x))) 
         (eats bill peanuts) 
         (alive bill) 
         (forall ((x)) (implies (eats bill x) (eats sue x))) 
         (forall ((y)) (implies (alive y)
                         (forall ((x)) (not-killed-by y x)))))
      (likes john peanuts))))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; requires q >= 2
(def-conjecture a
  (forall ((a) (b))
    (implies (forall ((y)) (implies (q y) (p y)))
      (for-some ((x)) (and (implies (p x) (p a)) 
                           (implies (q x) (p b)))))))

;; requires q >= 2
(def-conjecture a
  (forall ((c) (b))
    (implies
        (forall ((z)) (q (f z))) 
      (for-some ((x)) (for-some ((y))
                        (and (implies (p (f y)) (p x)) 
                             (implies (r y)
                               (and (r b) (r c)))
                             (q x)))))))

;; requires q >= 2
(def-conjecture a
  (forall ((b) (c))
    (implies
        (forall ((z)) (q (f z))) 
      (for-some ((x)) (for-some ((y))
                        (and (implies (p (f y)) 
                               (and (p x)
                                    (implies (r y)
                                      (and (r b) (r c)))))
                             (q x)))))))

;; requires q >= 2
(def-conjecture a
  (forall ((b) (c))
    (implies (q (f b)) 
      (for-some ((x)) (for-some ((y))
                        (and (implies (p (f y)) 
                               (and (p x) (implies (r y)
                                            (and (r b) (r c))))) 
                             (q x)))))))

;; requires q >= 2
(def-conjecture a
  (implies (forall ((x)) (p x))
    (forall ((a) (b)) (and (p a) (p b)))))

;; requires q >= 2
(def-conjecture a
  (forall ((a) (b)) (implies (forall ((z)) (implies (q z) (p z)))
                      (for-some ((x)) (and (implies (p x) (p a)) 
                                           (implies (q x) (p b)))))))

;; requires q >= 2
(def-conjecture a
  (for-some ((x))
    (forall ((y)) (implies (p x) (p y)))))

;; requires q >= 2
(def-conjecture a
  (forall ((a) (b))
    (implies (forall ((y)) (implies (q y) (p y)))
      (for-some ((x)) (and (implies (p x) (p a)) 
                           (implies (q x) (p b)))))))

;; requires q >= 2
(def-conjecture a
  (for-some ((z))                       ; thm1
    (forall ((x))
      (for-some ((y))
        (and (implies (p y x) (for-some ((w)) (p w y))) 
             (implies (and (p z y) (p y z)) (p y x)))))))

;; requires q >= 2
(def-conjecture a
  (implies (forall ((x) (y))
             (iff (eq x y)
                  (forall ((z))
                    (iff (a-member-of z x) (a-member-of z y)))))
    (forall ((a) (b))
      (implies (eq a b) (eq b a)))))

;; requires q >= 2
(def-conjecture a
  (forall ((a) (b)) (implies (forall ((x)) (p x))
                      (and (p a) (p b)))))

;; requires q >= 2
(def-conjecture a
  (implies (forall ((x)) (p x)) 
    (and (forall ((x)) (p x)) (forall ((y)) (p y)))))

;; requires q >= 2
(def-conjecture a
  (iff (for-some ((x)) (or (p x) (q x)))
       (or (for-some ((x)) (p x)) (for-some ((x)) (q x)))))

;; requires q >= 2
(def-conjecture a
  (iff (forall ((x)) (and (p x) (q x)))
       (and (forall ((x)) (p x)) (forall ((x)) (q x)))))

;; requires q >= 2
(def-conjecture a
  (for-some ((x)) (forall ((y))
                    (implies (implies (p y) (q x))
                      (implies (p x) (q x))))))

;; requires q >= 2
(def-conjecture a
  (implies (forall ((x) (y))
             (iff (eq x y)
                  (forall ((z))
                    (iff (a-member-of z x) (a-member-of z y)))))
    (forall ((x) (y)) (iff (eq x y) (eq y x)))))

;;; Group with stupid equality.

;; slow (quit)
;; I suspect this requires q>2 but haven't checked.
(def-conjecture a
  (forall ((e))
    (implies
        (and (forall ((x) (y)) (for-some ((z)) (p x y z)))
             (forall ((x) (y) (z) (u) (v) (w))
               (implies (and (p x y u) (p y z v) (p u z w))
                 (p x v w)))
             (forall ((x) (y) (z) (u) (v) (w))
               (implies (and (p x y u) (p y z v) (p x v w))
                 (p u z w)))
             (forall ((x)) (p x e x))
             (forall ((x)) (p e x x))
             (forall ((x)) (p x (i x) e))
             (forall ((x)) (p (i x) x e)))
      (implies (forall ((x)) (p x x e))
        (forall ((u) (v) (w)) (implies (p u v w) (p v u w)))))))

;; slow (quit)
;; I suspect this requires q>2 but haven't checked.
(def-conjecture a
  (forall ((e))
    (implies
        (and (forall ((x) (y)) (for-some ((z)) (p x y z)))
             (forall ((x) (y) (z) (u) (v) (w))
               (implies (and (p x y u) (p y z v) (p u z w))
                 (p x v w)))
             (forall ((x) (y) (z) (u) (v) (w))
               (implies (and (p x y u) (p y z v) (p x v w))
                 (p u z w)))
             (forall ((x)) (p x e x))
             (forall ((x)) (p e x x))
             (forall ((x)) (p x (i x) e))
             (forall ((x)) (p (i x) x e)))
      (forall ((u) (v) (w) (x))
        (implies (and (p (i u) (i v) w)
                      (p v u x))
          (p (i w) (i x) e))))))

;; ;; malformed formulas
;; (forall ((b) (a))
;;         (implies (forall ((y)) (implies (implies (r b) (r y))
;;                                         (or (p (f y) y)
;;                                             (and (p a) (not (p a))))))
;;                  (for-some ((x)) (for-some ((y)) (and (p x y)
;;                                                       (implies (q (f b) b)
;;                                                                (q x y)))))))

;; ;; malformed formulas
;; (forall ((b))
;;         (implies (and (r b) (q (f b) b) (p b)
;;                       (forall ((y)) (implies (r y)
;;                                              (or (p (f y) y) (not (p y))))))
;;                  (for-some ((x)) (for-some ((y)) (and (p x y) (q x y))))))

