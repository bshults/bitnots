(def-target a (forall ((peanuts) (john) (bill) (sue) (apples) (chicken))
                (implies 
                    (and (forall ((x)) (implies (food x) (likes john x))) 
                         (food apples) 
                         (food chicken) 
                         (forall ((x))
                           (implies
                               (for-some ((y)) (and (eats y x)
                                                    (not-killed-by y x) ))
                             (food x))) 
                         (eats bill peanuts) 
                         (alive bill) 
                         (forall ((x)) (implies (eats bill x) (eats sue x))) 
                         (forall ((y)) (implies (alive y)
                                         (forall ((x)) (not-killed-by y x)))))
                  (likes john peanuts))))

(def-target a (forall ((a))
                (for-some ((x) (x2) (x3) (x4) (y))
                  (implies (and (p a) (e a)
                                (implies (e x)
                                  (or (g x) (s x (f x))))
                                (implies (e x2)
                                  (or (g x2) (c (f x2)))) 
                                (implies (s a y) (p y))) 
                    (or (and (p x3) (g x3)) 
                        (and (p x4) (c x4)))))))

(def-target test-mbc1 (implies (and (forall ((x)) (implies (p x) (q x)))
                            (for-some ((y)) (implies (q y) (r y))))
                        (for-some ((z)) (implies (p z) (r z)))))

(def-target test-mbc2 (implies (and (for-some ((y)) (implies (q y) (r y)))
                                    (forall ((x)) (implies (p x) (q x))))
                        (for-some ((z)) (implies (p z) (r z)))))

(def-target a (implies (p z) (p z)))

(def-target a (forall ((y)) (implies (forall ((x)) (p x)) (p y))))

(def-target a (implies (forall ((x)) (p x)) (for-some ((x)) (p x))))

(def-target a (implies (not (for-some ((y)) (p y)))
                (forall ((y)) (implies (for-some ((x)) (p x))
                                (p y)))))

(def-target a (implies (for-some ((x)) (p x)) (for-some ((y)) (p y))))

(def-target a (implies (or (forall ((x)) (p x)) (forall ((x)) (q x)))
                (forall ((x)) (or (p x) (q x)))))

(def-target a (implies (for-some ((x)) (and (p x) (q x)))
                (and (for-some ((x)) (p x)) (for-some ((x)) (q x)))))

(def-target a (iff (forall ((x)) (or (p x) (c)))
                   (or (forall ((x)) (p x)) (c))))

(def-target a (iff (for-some ((x)) (and (p x) (c)))
                   (and (for-some ((x)) (p x))
                        (c))))

(def-target a (iff (for-some ((x)) (c)) (c)))

(def-target a (iff (forall ((x)) (c)) (c)))

(def-target a (iff (for-some ((x)) (implies (c) (p x)))
                   (implies (c) (for-some ((x)) (p x)))))

(def-target a (iff (for-some ((x)) (implies (p x) (c)))
                   (implies (forall ((x)) (p x)) (c))))

(def-target a (iff (forall ((x)) (implies (c) (p x)))
                   (implies (c) (forall ((x)) (p x)))))

(def-target a (iff (forall ((x)) (implies (p x) (c)))
                   (implies (for-some ((x)) (p x)) (c))))

(def-target a (implies (for-some ((x)) (forall ((y)) (p x y)))
                (forall ((y)) (for-some ((x)) (p x y)))))

(def-target a (implies (forall ((x) (y)) (p x y))
                (forall ((x)) (p x x))))

(def-target a (iff (for-some ((x)) (p x)) (for-some ((y)) (p y))))

(def-target a (implies (for-some ((x)) (p x)) (for-some ((z)) (p z))))

(def-target a (forall ((a))
                (implies (and (or (f) (g)) (forall ((x)) (and (p x) (q x))))
                  (q a))))

(def-target a (or (iff (a) (b)) (a) (b)))

(def-target a (implies (and (a) (b)) (iff (a) (b))))

(def-target a (forall ((a) (b))         ; thm2
                (for-some ((x) (y))
                  (implies
                      (and (implies (q x) (p x a))
                           (q a)
                           (q b)
                           (implies (r y) (p b y))
                           (r a)
                           (r b)
                           (implies (s a) (p x y))
                           (s a))
                    (p a b)))))

(def-target a (forall ((b))
                (implies
                    (forall ((y)) (implies (implies (r b) (r y)) (p (f y) y)))
                  (for-some ((x)) (for-some ((y))
                                    (and (p x y) (implies (q (f b) b)
                                                   (q x y))))))))

(def-target a (forall ((b))
                (implies (and (forall ((x)) (implies (p x) (q x))) (r b)) 
                  (implies (forall ((y)) (implies (r y) (p y))) (q b)))))

(def-target a (for-some ((y)) (implies (p y) (forall ((x)) (p x)))))

(def-target a (forall ((a) (b))
                (for-some ((x) (y))
                  (implies (implies (p x)
                             (r y))
                    (implies (p a) (r b))))))

(def-target a (for-some ((y)) (implies (for-some ((x)) (p x))
                                (p y))))

(def-target a (implies (for-some ((x)) (p x))
                (and (for-some ((x)) (p x))
                     (implies (a) (and (or (b) (not (b))) (implies (q) (q)))))))

(def-target a (implies (forall ((x)) (p x)) (for-some ((y)) (p y))))

(def-target a (implies (forall ((x)) (implies (p x) (q x)))
                (implies (forall ((x)) (p x))
                  (forall ((x)) (q x)))))

(def-target a (implies (forall ((x)) (implies (a x) (b x)))
                (implies (for-some ((x)) (a x)) (for-some ((x)) (b x)))))

(def-target a (implies (for-some ((x)) (implies (a x) (b x)))
                (implies (forall ((x)) (a x)) (for-some ((x)) (b x)))))

(def-target a (not (for-some ((y)) (forall ((x)) (iff (a x y) (not (a x x)))))))

(def-target a (implies (and (for-some ((x)) (a x)) (forall ((x)) (b x)))
                (for-some ((x)) (and (a x) (b x)))))

(def-target a (implies (for-some ((x)) (b x))
                (for-some ((x)) (or (a x) (b x)))))

(def-target a (iff (for-some ((x) (y)) (a x y)) (for-some ((y) (x)) (a x y))))

(def-target a (implies (and (forall ((x)) (p x)) (for-some ((y)) (q y)))
                (for-some ((z)) (forall ((y)) (or (p y) (r z))))))

(def-target a (implies (forall ((x)) (for-some ((y)) (and (p x) (q y))))
                (for-some ((z)) (forall ((y)) (or (p y) (r z))))))

(def-target a (implies
                  (forall ((x)) (for-some ((y)) (and (a x y) (a y y))))
                (for-some ((z)) (a z z))))

(def-target a (forall ((a) (b) (c))
                (implies (and (s a) (s b) (r b c)
                              (forall ((x)) (implies (s x) (p x)))
                              (forall ((x)) (forall ((y)) (implies (r x y)
                                                            (q x y)))))
                  (for-some ((x)) (for-some ((y)) (and (p x) (q x y)))))))

(def-target a (implies (and (forall ((x)) (implies (a x) (or (b x) (c x))))
                            (not (forall ((x)) (implies (a x) (b x)))))
                (for-some ((x)) (and (a x) (c x)))))

(def-target a (implies (and (forall ((x) (y)) (implies (r x y) (r y x)))
                            (forall ((x) (y) (z))
                              (implies (and (r x y) (r y z)) (r x z))))
                (forall ((x) (y)) (implies (r x y) (r x x)))))

(def-target a (forall ((a) (b) (c))
                (implies (and (s a) (s b) (r b c)
                              (forall ((x)) (implies (s x) (p x)))
                              (forall ((x)) (forall ((y))
                                              (implies (r x y) (q x y)))))
                  (for-some ((x)) (for-some ((y)) (and (p x) (q x y)))))))

(def-target a (implies (and (implies (forall ((x)) (implies (and (F x) (G x))
                                                     (H x)))
                              (for-some ((x)) (and (F x) (not (G x)))))
                            (or (forall ((w)) (implies (F w) (G w)))
                                (forall ((z)) (implies (F z) (H z)))))
                (implies (forall ((r)) (implies (and (F r) (H r))
                                         (G r)))
                  (for-some ((v)) (and (F v) (G v) (not (H v)))))))

(def-target a (forall ((peanuts) (john) (bill) (sue) (apples) (chicken))
                (implies                ;for checking out detail
                    (and 
                     (forall ((x)) (forall ((y)) (implies (and (alive y)
                     (eats y chicken)) 
                                                   (likes y x))))
                     (forall ((x)) (implies (food x) (likes john x))) 
                     (food apples) 
                     (food chicken) 
                     (forall ((x)) (implies (for-some ((y)) (and (eats y x)
                     (not-killed-by y x)))
                                     (food x))) 
                     (eats bill peanuts) 
                     (alive bill) 
                     (forall ((x)) (implies (eats bill x) (eats sue x))) 
                     (forall ((y)) (implies (alive y)
                                     (forall ((x)) (not-killed-by y x)))))
                  (likes john peanuts))))

